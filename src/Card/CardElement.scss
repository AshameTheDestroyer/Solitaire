@use "../Page/Page.scss";

$non-numeric-digits: J, Q, K, Joker;
$non-numeric-digit-icons: sword_2, crown_queen, crown_king, joker;

.card-element {
    $hover-scale: 1.1;
    --pseudo-element-offset: 0.5rem;
    --colourful-colour: var(--main-colour);
    --colourless-colour: var(--fore-colour);
    --colourful-filter: var(--main-colour-filter);
    --colourless-filter: none;
    --icon-url: url("");

    position: relative;

    width: Page.$card-element-width;
    aspect-ratio: Page.$card-element-aspect-ratio;

    display: flex;
    place-content: center;
    place-items: center;

    background-color: var(--background-darker-colour);

    border: 0.4rem solid var(--half-transparent);
    border-radius: 1rem;

    box-sizing: border-box;

    transition: transform 500ms;

    overflow: hidden;

    z-index: 1;

    @each $card-colour in Page.$card-colours {

        &.#{$card-colour} {
            color: var(--#{$card-colour}-colour);

            .corner::after,
            .figure-container figure,
            &>figure::after {
                filter: var(--#{$card-colour}-filter);
            }
        }
    }

    @each $card-type in Page.$card-types {

        &.#{$card-type} {
            --icon-url: url("../Icons/#{$card-type}.svg");
        }
    }

    @for $i from 1 through length($list: $non-numeric-digits) {

        &[data-digit=#{nth($list: $non-numeric-digits, $n: $i)}]>figure {
            --icon-url: url("../Icons/#{nth($list: $non-numeric-digit-icons, $n: $i)}.svg") !important;
        }
    }

    @mixin on-hover-or-select {
        filter: brightness(150%);
    }

    &::after {
        content: "";

        position: absolute;
        inset: 0;
        transform: rotateY(180deg);

        background-color: var(--colourful-colour);
        background-image: url("../Icons/cards.svg");
        background-repeat: no-repeat;
        background-position: center;
        background-size: 80%;

        opacity: 0;

        transition: transform 500ms, opacity 500ms;
    }

    &.clickable {
        cursor: pointer;

        &:is(:hover, .selected) {
            @include on-hover-or-select();

            transform: scale($hover-scale);
        }
    }

    &.flipped {
        transform: rotateY(180deg);

        &::after {
            transform: rotateY(0deg);

            opacity: 1;
        }

        &.clickable:is(:hover, .selected) {
            @include on-hover-or-select();

            transform: rotateY(180deg) scale($hover-scale);
        }
    }

    &[data-digit=Joker] .corner {
        text-transform: uppercase;
    }

    .corner {
        font-size: medium;

        position: absolute;

        width: calc(100% - var(--pseudo-element-offset) * 2);

        &:nth-child(1) {
            top: var(--pseudo-element-offset);
            left: var(--pseudo-element-offset);
        }

        &:nth-child(2) {
            bottom: var(--pseudo-element-offset);
            right: var(--pseudo-element-offset);
            transform: rotate(180deg);
        }

        &::after {
            content: "";

            position: absolute;
            top: 50%;
            right: 0;
            transform: translateY(-50%);

            width: 25%;
            aspect-ratio: 1;

            background-image: var(--icon-url);
            background-repeat: no-repeat;
            background-position: center;
            background-size: 100%;
        }
    }

    .figure-container {
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);

        height: 50%;
        width: calc(75% / 3);

        display: flex;
        flex-direction: column;
        place-content: center space-between;
        place-items: center;

        @for $i from 1 through 3 {

            &:nth-child(#{calc($i) + 2}) {
                left: calc(50% + ($i - 2) * 15%);
            }
        }

        &:nth-child(4) figure:nth-child(n + 2),
        &:not(:nth-child(4)) figure:nth-child(n + 3) {
            transform: rotate(180deg);
        }

        &.centred {
            place-content: center;
            place-items: center;
        }

        &.shortened-for-7 {
            height: 30%;
        }

        &.shortened-for-10 {
            height: 35%;
        }

        &.enlarged {
            width: Page.$card-large-icon-width;

            figure {
                width: 100%;
            }
        }

        &.has-middle-figure figure:nth-child(2) {
            transform: none;
        }

        figure {
            width: 60%;
            aspect-ratio: 1;

            background-image: var(--icon-url);
            background-repeat: no-repeat;
            background-position: center;
            background-size: 100%;
        }
    }

    &>figure {
        position: relative;

        --icon-url: url("");

        width: Page.$card-large-icon-width;
        aspect-ratio: 1;

        &::after {
            content: "";

            position: absolute;
            inset: 0;

            background-image: var(--icon-url);
            background-repeat: no-repeat;
            background-position: center;
            background-size: 100%;
        }
    }
}

.light-themed .card-element {
    --colourful-colour: #FF0000;
    --colourful-filter: sepia() saturate(1000%) hue-rotate(100deg) invert(1) brightness(200%);
    --colourless-filter: invert(1);

    background-color: var(--background-colour);

    border-color: var(--fore-darker-colour);
}

@media (width <=Page.$second-screen-width) {

    .card-element:not(.unadaptable) {
        --pseudo-element-offset: 0.2rem;

        @each $card-type in Page.$card-types {

            &.#{$card-type}>figure {
                --icon-url: url("../Icons/#{$card-type}.svg");
            }
        }

        &[data-digit=Joker] .corner {
            font-size: x-small;
            top: 5%;
            left: 7.5%;
            transform: scale(0.85);

            &:nth-child(2) {
                display: none;
            }
        }

        .corner {
            font-size: x-small;
        }

        .figure-container {
            display: none;
        }

        &>figure {
            width: 100%;
            transform: translate(25%, 45%);

            background-color: inherit;
        }
    }
}